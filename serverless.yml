org: saatwik
app: serverless-app
service: s3-file-uploader

frameworkVersion: '4'

provider:
  name: aws
  stage: dev
  runtime: python3.12
  region: ap-south-1
  stackName: file-uploader-app-${self:provider.region}

package:
  individually: true 

functions:
  s3_doc_uploader:
    handler: handler.lambda_handler
    description: This function will process and upload the file to the S3 bucket
    package: 
      patterns:
        - '!./**'
        - handler.py
        - common.py
    events:
      - http:
          path: /presignedurl
          method: POST
          cors: true
    environment:
      FILE_BUCKET: ${self:resources.Resources.fileUploaderBucket.Properties.BucketName}

resources:
  Resources:
      fileUploaderBucket:
        Type: AWS::S3::Bucket
        Properties: 
          BucketName: s3file-uploader-file-uploader-${self:provider.stage}
          OwnershipControls: 
            Rules:
            - ObjectOwnership: ObjectWriter
          PublicAccessBlockConfiguration: 
            BlockPublicPolicy: false
          CorsConfiguration:
            CorsRules:
              - AllowedHeaders:
                  - "*"
                AllowedMethods:
                  - PUT
                  - GET
                  - HEAD
                AllowedOrigins:
                  - "*"
                MaxAgeSeconds: 3600

      legalDocAnalyserBucketS3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: ${self:resources.Resources.fileUploaderBucket.Properties.BucketName}
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - Effect: Allow
                Principal: "*"
                Action: "s3:PutObject"
                Resource: !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - !Ref fileUploaderBucket
                            - '/*'
                
plugins:
  - serverless-python-requirements
